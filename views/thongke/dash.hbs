<head>
    <title>Đăng nhập quản trị | Website quản trị v2.0</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="public/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="public/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="public/vendor/animate/animate.css">
    <link rel="stylesheet" type="text/css" href="public/vendor/css-hamburgers/hamburgers.min.css">
    <link rel="stylesheet" type="text/css" href="public/vendor/select2/select2.min.css">
    <link rel='stylesheet' href='/stylesheets/signin.css'/>
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
</head>
<style>
    .form-group input {
        width: 400px;
    }


</style>

    <div class="app-title">
        <ul class="app-breadcrumb breadcrumb">
            <li class="breadcrumb-item"><a href="/cate"> Thống kê doanh thu</a></li>

        </ul>
    </div>
    <div class="tile container-fluid" style="padding-bottom: 100px">
        <div class="row">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2" style="margin-left: 40px">Dashboard</h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <div class="btn-group me-2"  style="right: 40px; position: absolute">
                            <button type="button" onclick="updateChartWeek()" class="btn btn-sm btn-outline-secondary">
                                Tuần này
                            </button>
                            <button type="button" onclick="updateChart()" class="btn btn-sm btn-outline-secondary">Tháng
                                này
                            </button>
                            <button type="button" onclick="updateChartYear()" class="btn btn-sm btn-outline-secondary">
                                Năm này
                            </button>
                        </div>
                    </div>
                </div>
                <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>

            <div class="container text-center">
                <div class="tile" >
                    <label>Start date:  </label>
                    <input type="date" id="startdate" name="startdate"/>
                    <label style="padding-left: 50px; padding-right: 50px;"></label>
                    <label>End date: </label>
                    <input type="date"  id="enddate"  name="enddate"/>
                    <label style="padding-left: 50px; padding-right: 50px;"></label>
                    <button type="button" onclick="updateChartDatetoDate()" class="btn btn-sm btn-outline-secondary">
                        Xác nhận</button>
                </div>
                <div class="row g-4 mb-4">
                    <div class="col-6 col-lg-3">
                        <div class="app-card app-card-stat shadow-sm h-100">
                            <div class="app-card-body p-3 p-lg-4">
                                <h5 class="stats-type mb-1">Tổng doanh thu</h5>
                                <div class="stats-figure" ><p id="AllIncome">{{objStatus.formatIncome}}</p></div>
                                <div class="stats-meta text-success">
                                    <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-up"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                              d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z"/>
                                    </svg>
                                    20%
                                </div>
                            </div><!--//app-card-body-->
                            <a class="app-card-link-mask" href="#"></a>
                        </div><!--//app-card-->
                    </div><!--//col-->

                    <div class="col-6 col-lg-3">
                        <div class="app-card app-card-stat shadow-sm h-100">
                            <div class="app-card-body p-3 p-lg-4">
                                <h5 class="stats-type mb-1">Số lượng hàng còn trong kho</h5>
                                <div class="stats-figure">{{objStatus.StockLeft}}</div>
                                <div class="stats-meta text-success">
                                    <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-down"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                              d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z"/>
                                    </svg>
                                    5%
                                </div>
                            </div>
                            <a class="app-card-link-mask" href="#"></a>
                        </div>
                    </div>
                    <div class="col-6 col-lg-3">
                        <div class="app-card app-card-stat shadow-sm h-100">
                            <div class="app-card-body p-3 p-lg-4">
                                <h5 class="stats-type mb-1">Tổng đơn hàng</h5>
                                <div class="stats-figure">{{objStatus.AllOrder}}</div>
                                <div class="stats-meta">
                                    Open
                                </div>
                            </div>
                            <a class="app-card-link-mask" href="#"></a>
                        </div>
                    </div>
                    <div class="col-6 col-lg-3">
                        <div class="app-card app-card-stat shadow-sm h-100">
                            <div class="app-card-body p-3 p-lg-4">
                                <h5 class="stats-type mb-1">Số lượng người dùng</h5>
                                <div class="stats-figure">{{objStatus.UserNumber}}</div>
                            </div>
                            <a class="app-card-link-mask" href="#"></a>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <div class="card" style="width: 18rem; margin-left: 10px">
                            <div class="card-header">
                                Trạng thái đơn hàng
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item list-group-item-danger text-bg-light d-flex justify-content-between align-items-center">Đang chờ xác nhận: {{objStatus.AllPendingOrder}}  <span class=""> <a class="text-muted text-decoration-none" href="order/listorderByStatus/Đang chờ xác nhận">Chi tiết</a></span></li>
                                <li class="list-group-item list-group-item-primary   text-bg-light d-flex justify-content-between align-items-center">Đang Chuẩn bị hàng: {{objStatus.AllConfirmedOrder}} <span class=""> <a class="text-muted text-decoration-none" href="order/listorderByStatus/Đang chuẩn bị hàng">Chi tiết</a></span></li>
                                <li class="list-group-item list-group-item-warning d-flex justify-content-between align-items-center">Đang giao hàng: {{objStatus.AllDeliverOrder}} <span class=""> <a class="text-muted text-decoration-none" href="order/listorderByStatus/Đang giao hàng">Chi tiết</a></span></li>
                                <li class="list-group-item list-group-item-success text-bg-success d-flex justify-content-between align-items-center">Giao hàng thành công: {{objStatus.AllSuccessOrder}} <span class=""> <a class="text-muted text-decoration-none" href="order/listorderByStatus/Giao hàng thành công">Chi tiết</a></span></li>
                                <li class="list-group-item list-group-item-secondary text-bg-success d-flex justify-content-between align-items-center">Đơn hàng đã hủy: {{objStatus.AllCancelOrder}} <span class=""> <a class="text-muted text-decoration-none" href="order/listorderByStatus/người dùng đã hủy đơn hàng">Chi tiết</a></span></li>
                            </ul>
                        </div>
                    </div>

                </div>

                <h3 class="text-left mt-3 mb-3">Top 10 sản phẩm bán nhiều nhất</h3>

                <table class="table table-hover">
                    <thead>

                    <tr>
                        <th scope="col">Tên sản phẩm</th>
                        <th scope="col">Giá</th>
                        <th scope="col">Ảnh</th>
                        <th scope="col">Loại</th>
                        <th scope="col">Đã bán</th>
                    </tr>
                    </thead>
                    <tbody>
                    {{#each objTop10Product}}
                        <tr>
                            <th>{{this.title}}</th>
                            <td>{{this.price}}</td>
                            <td><img src="{{this.img}}" style="width: 50px;height: 50px;align-items: center"></td>
                            <td>{{this.category}}</td>
                            <td>{{this.sold}}</td>
                        </tr>

                    {{/each}}
                    </tbody>
                </table>

            </div>

            <script src="https://code.jquery.com/jquery-3.5.0.js"></script>
            <script src="../assets/dist/js/bootstrap.bundle.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js"
                    integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE"
                    crossorigin="anonymous"></script>
            <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
                    integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
                    crossorigin="anonymous"></script>
            <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
            <script>
                function format2(n, currency) {
                    return  n.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + currency;
                }

                //fetch data year
                function updateChartYear() {
                    async function fetchData() {
                        const url = 'https://mofshop.shop/thongke/filterAmountMonthtoYear'
                        const response = await fetch(url);
                        // chờ khi req completed
                        const datapoints = await response.json();
                        // kiểm tra

                        return datapoints;
                    }
                    fetchData().then(datapoints => {
                        const date = datapoints.MonthOfYear.map(function (index) {
                            return "tháng" + index._id.month
                        });
                        const date1 = datapoints.MonthOfYear.map(function (index) {
                            return index.count[0].total
                        });
                        let SumValue=0;
                        for (let i = 0; i < date1.length; i++) {
                            SumValue+=date1[i]
                        }
                        $('p#AllIncome').text(format2(SumValue,' vnd'));
                        myChart.config.data.labels = date;
                        myChart.config.data.datasets[0].data = date1;
                        myChart.config.data.datasets[0].label = "Thống kê theo tháng trong năm ";
                        myChart.update();
                    })

                }
                //fetch data by admin
                function updateChartDatetoDate() {

                    async function fetchData() {
                        const startDate = document.getElementById("startdate").value;
                        const endDate = document.getElementById("enddate").value;


                        // $('#AllIncome').text('Test message here')
                        const url = 'https://mofshop.shop/thongke/filterByDatePicker'
                        const response = await fetch(url,{
                            method:'POST',
                            body: JSON.stringify({
                                startDate:startDate,
                                endDate: endDate,
                            }),
                            headers: {
                                "Content-type": "application/json; charset=UTF-8"
                            }
                        });
                        // chờ khi req completed
                        const datapoints = await response.json();
                        // kiểm tra
                        return datapoints;
                    }


                    fetchData().then(datapoints => {
                        const date = datapoints.DatetoDate.map(function (index) {
                            const date = index._id.day
                            const newDate = new Date(date);
                            return newDate.toLocaleDateString('en-GB');
                        });

                        const date1 = datapoints.DatetoDate.map(function (index) {
                            return index.count[0].total
                        });
                        let SumValue=0;
                        for (let i = 0; i < date1.length; i++) {
                                SumValue+=date1[i]
                            }
                            $('p#AllIncome').text(format2(SumValue,' vnd'));

                        myChart.config.data.labels = date;
                        myChart.config.data.datasets[0].data = date1;
                        myChart.config.data.datasets[0].label = "Thống kê theo tháng trong năm ";
                        myChart.update();
                    })

                }

                //fetch Data month
                function updateChart() {
                    async function fetchData() {
                        const url = 'https://mofshop.shop/thongke/filterAmountByMonth'
                        const response = await fetch(url);
                        // chờ khi req completed
                        const datapoints = await response.json();
                        // kiểm tra
                        console.log(datapoints);
                        return datapoints;
                    }

                    fetchData().then(datapoints => {
                        const date = datapoints.DaysOfMonth.map(function (index) {
                            const date = index._id;
                            const newDate = new Date(date);
                            return newDate.toLocaleDateString('en-GB');
                        });
                        const date1 = datapoints.DaysOfMonth.map(function (index) {
                            return index.count[0].total
                        });
                        let SumValue=0;
                        for (let i = 0; i < date1.length; i++) {
                            SumValue+=date1[i]
                        }
                        $('p#AllIncome').text(format2(SumValue,' vnd'));
                        myChart.config.data.labels = date;
                        myChart.config.data.datasets[0].data = date1;
                        myChart.config.data.datasets[0].label = "Thống kê theo từng ngày trong tháng ";
                        myChart.update();
                    })

                }

                //fetch Data week
                function updateChartWeek() {

                    async function fetchData() {
                        const url = 'https://mofshop.shop/thongke/filterAmountByWeek'
                        const response = await fetch(url);
                        // chờ khi req completed
                        const datapoints = await response.json();
                        // kiểm tra
                        console.log(datapoints);
                        return datapoints;
                    }

                    fetchData().then(datapoints => {

                        const date1 = datapoints.dayofweek.map(function (index) {
                            return index.count[0].total
                        });
                        let SumValue=0;
                        for (let i = 0; i < date1.length; i++) {
                            SumValue+=date1[i]
                        }
                        $('p#AllIncome').text(format2(SumValue,' vnd'));
                        myChart.config.data.labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
                        myChart.config.data.datasets[0].data = date1;
                        myChart.config.data.datasets[0].label = "Thống kê theo tuần ";
                        myChart.update();
                    })

                }

                // setup
                const data = {
                    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                    datasets: [{
                        label: 'Thống kê theo từng ngày trong tháng',
                        data: [18, 12, 6, 9, 12, 3, 9],
                        backgroundColor: [
                            'rgba(255, 26, 104, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(0, 0, 0, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 26, 104, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(0, 0, 0, 1)'
                        ],
                        borderWidth: 1
                    }]
                };

                // config
                const config = {
                    type: 'bar',
                    data,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                };

                // render init block
                const myChart = new Chart(
                        document.getElementById('myChart'),
                        config
                );
            </script>
        </div>
    </div>
    </div>


